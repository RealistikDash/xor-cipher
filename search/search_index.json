{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>xor-cipher</code>","text":"<p>Simple, reusable and optimized XOR ciphers in Python.</p> <p><code>xor-cipher</code> is a fast implementation of the XOR cipher written using Rust. Our tests show that it can be <code>1000x</code> faster than pure Python implementations. It has been optimized to breeze through datasets of any size.</p>"},{"location":"#installing","title":"Installing","text":"<p>Python 3.8 or above is required.</p>"},{"location":"#pip","title":"<code>pip</code>","text":"<p>Installing the library with <code>pip</code> is quite simple:</p> <pre><code>$ pip install xor-cipher\n</code></pre> <p>Alternatively, the library can be installed from source:</p> <pre><code>$ pip install git+https://github.com/xor-cipher/xor-cipher.git\n</code></pre> <p>Or via cloning the repository:</p> <pre><code>$ git clone https://github.com/xor-cipher/xor-cipher.git\n$ cd xor-cipher\n$ pip install .\n</code></pre>"},{"location":"#uv","title":"<code>uv</code>","text":"<p>You can add <code>xor-cipher</code> as a dependency with the following command:</p> <pre><code>$ uv add xor-cipher\n</code></pre>"},{"location":"#examples","title":"Examples","text":""},{"location":"#simple-cipher","title":"Simple Cipher","text":"<p>Use the <code>xor</code> function to perform the simple XOR cipher:</p> <pre><code>&gt;&gt;&gt; from xor_cipher import xor\n&gt;&gt;&gt; xor(b\"Hello, world!\", 0x42)\nb\"\\n'..-nb5-0.&amp;c\"\n</code></pre>"},{"location":"#cyclic-cipher","title":"Cyclic Cipher","text":"<p>Use the <code>cyclic_xor</code> function to perform the cyclic XOR variation:</p> <pre><code>&gt;&gt;&gt; from xor_cipher import cyclic_xor\n&gt;&gt;&gt; cyclic_xor(b\"Hello, world!\", b\"BLOB\")\nb\"\\n)#.-`o5-&gt;#&amp;c\"\n</code></pre>"},{"location":"#in-place-cipher","title":"In-Place Cipher","text":"<p>There are functions to perform the XOR cipher in-place, on <code>bytearray</code> instances:</p> <pre><code>&gt;&gt;&gt; from xor_cipher import xor_in_place\n&gt;&gt;&gt; data = bytearray(b\"Hello, world!\")\n&gt;&gt;&gt; xor_in_place(data, 0x42)\n&gt;&gt;&gt; data\nbytearray(b\"\\n'..-nb5-0.&amp;c\")\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>You can find the documentation here.</p>"},{"location":"#support","title":"Support","text":"<p>If you need support with the library, you can send an email.</p>"},{"location":"#changelog","title":"Changelog","text":"<p>You can find the changelog here.</p>"},{"location":"#security-policy","title":"Security Policy","text":"<p>You can find the Security Policy of <code>xor-cipher</code> here.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you are interested in contributing to <code>xor-cipher</code>, make sure to take a look at the Contributing Guide, as well as the Code of Conduct.</p>"},{"location":"#license","title":"License","text":"<p><code>xor-cipher</code> is licensed under the MIT License terms. See License for details.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#500-2024-06-26","title":"5.0.0 (2024-06-26)","text":""},{"location":"changelog/#changes","title":"Changes","text":"<ul> <li>The core was rewritten in Rust. (#55)</li> </ul>"},{"location":"changelog/#removals","title":"Removals","text":"<ul> <li>Removed <code>unsafe</code> functions. (#55)</li> </ul>"},{"location":"changelog/#400-2024-03-04","title":"4.0.0 (2024-03-04)","text":""},{"location":"changelog/#changes_1","title":"Changes","text":"<ul> <li>Added byte key validation.</li> </ul>"},{"location":"changelog/#removals_1","title":"Removals","text":"<ul> <li>Removed <code>xor_string</code>, <code>cyclic_xor_string</code> and <code>cyclic_xor_string_unsafe</code>.</li> <li><code>DEFAULT_ENCODING</code> and <code>DEFAULT_ERRORS</code> are not used anymore, therefore they were removed as well.</li> </ul>"},{"location":"changelog/#internal","title":"Internal","text":"<ul> <li>Improved typing.</li> </ul>"},{"location":"changelog/#321-2024-02-26","title":"3.2.1 (2024-02-26)","text":"<p>No significant changes.</p>"},{"location":"changelog/#320-2024-02-25","title":"3.2.0 (2024-02-25)","text":""},{"location":"changelog/#internal_1","title":"Internal","text":"<ul> <li>Improved typing.</li> </ul>"},{"location":"changelog/#310-2024-01-15","title":"3.1.0 (2024-01-15)","text":""},{"location":"changelog/#internal_2","title":"Internal","text":"<ul> <li>Dropped Python 3.7 support.</li> </ul>"},{"location":"changelog/#301-2023-06-02","title":"3.0.1 (2023-06-02)","text":"<p>No significant changes.</p>"},{"location":"changelog/#300-2023-01-05","title":"3.0.0 (2023-01-05)","text":"<ul> <li>Moved <code>xor_cipher.extension</code> imports into <code>xor_cipher</code> prelude instead of <code>xor_cipher.core</code>.   This makes it easy to generate proper documentation and   allows to test both python and cython implementations.</li> </ul>"},{"location":"changelog/#240-2023-01-05","title":"2.4.0 (2023-01-05)","text":""},{"location":"changelog/#internal_3","title":"Internal","text":"<ul> <li>Migrated to using <code>setuptools</code>.</li> </ul>"},{"location":"changelog/#231-2022-12-12","title":"2.3.1 (2022-12-12)","text":""},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Exported in-place functions.</li> </ul>"},{"location":"changelog/#230-2022-10-29","title":"2.3.0 (2022-10-29)","text":""},{"location":"changelog/#changes_2","title":"Changes","text":"<ul> <li>Transferred the project to the <code>xor-cipher</code> organization.</li> </ul>"},{"location":"changelog/#222-2022-10-25","title":"2.2.2 (2022-10-25)","text":""},{"location":"changelog/#features_1","title":"Features","text":"<ul> <li>Fixed the memory leak for functions which created copies of the initial buffer.</li> </ul>"},{"location":"changelog/#221-2022-10-25","title":"2.2.1 (2022-10-25)","text":""},{"location":"changelog/#features_2","title":"Features","text":"<ul> <li>Optimized the process of memory copying (both in performance and memory usage).</li> </ul>"},{"location":"changelog/#220-2022-10-25","title":"2.2.0 (2022-10-25)","text":""},{"location":"changelog/#features_3","title":"Features","text":"<ul> <li>Added <code>py.typed</code> file to signify that the library is typed.</li> </ul>"},{"location":"changelog/#210-2022-10-25","title":"2.1.0 (2022-10-25)","text":"<p>No significant changes.</p>"},{"location":"changelog/#200-2022-10-24","title":"2.0.0 (2022-10-24)","text":""},{"location":"changelog/#features_4","title":"Features","text":"<ul> <li>Added <code>cyclic_xor_string_unsafe</code> as the part of the unsafe API.</li> <li>Added <code>xor_in_place</code>.</li> <li>Added <code>cyclic_xor_in_place</code>.</li> <li>Added <code>cyclic_xor_in_place_unsafe</code> as the part of the unsafe API.</li> </ul>"},{"location":"changelog/#changes_3","title":"Changes","text":"<ul> <li>Bumped the minimal Python version to <code>3.7</code>.</li> <li>Renamed <code>xor_static -&gt; xor</code>.</li> <li>Renamed <code>xor_cyclic -&gt; cyclic_xor</code>.</li> <li>Renamed <code>xor_cyclic_unsafe -&gt; cyclic_xor_unsafe</code>.</li> <li>Renamed <code>xor_static_str -&gt; xor_string</code>.</li> <li>Renamed <code>xor_cyclic_str -&gt; cyclic_xor_string</code>.   This function now expects <code>key</code> of type <code>str</code> instead of <code>bytes</code>.</li> </ul>"},{"location":"changelog/#103-2022-10-20","title":"1.0.3 (2022-10-20)","text":""},{"location":"changelog/#features_5","title":"Features","text":"<ul> <li>Added <code>xor_cyclic_unsafe</code>, introducing the unsafe API.</li> </ul>"},{"location":"changelog/#fixes","title":"Fixes","text":"<ul> <li>Added key length check in <code>xor_cyclic</code>.</li> </ul>"},{"location":"changelog/#102-2022-09-19","title":"1.0.2 (2022-09-19)","text":""},{"location":"changelog/#fixes_1","title":"Fixes","text":"<ul> <li>Fixed type annotations.</li> </ul>"},{"location":"changelog/#101-2022-09-19","title":"1.0.1 (2022-09-19)","text":""},{"location":"changelog/#fixes_2","title":"Fixes","text":"<ul> <li>Fixed extension builds.</li> </ul>"},{"location":"changelog/#100-2022-09-19","title":"1.0.0 (2022-09-19)","text":"<p>Initial release.</p>"},{"location":"code_of_conduct/","title":"Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official email address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement to conduct@nekit.dev.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://contributor-covenant.org/version/2/1/code_of_conduct.</p> <p>Community Impact Guidelines were inspired by Mozilla's Code of Conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://contributor-covenant.org/faq. Translations are available at https://contributor-covenant.org/translations.</p>"},{"location":"reference/","title":"Reference","text":"<p>Note</p> <p><code>xor_cipher.python</code> contains pure-python implementations, while <code>xor_cipher.core</code> uses extensions. Usually imports should happen from <code>xor_cipher</code>, which will use the fastest available functionality.</p>"},{"location":"reference/#xor_cipher.python.xor","title":"<code>xor(data: bytes, key: int) -&gt; bytes</code>","text":"<p>Applies XOR operation (<code>byte ^ key</code>) for each <code>byte</code> in <code>data</code>.</p> <p>This function is its own inverse, meaning</p> <pre><code>xor(xor(data, key), key) == data\n</code></pre> <p>for any <code>data</code> and <code>key</code>.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>bytes</code> <p>The data to encode.</p> required <code>key</code> <code>int</code> <p>The key to use for encoding. Must be in range <code>[0, 255]</code>.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the <code>key</code> is not in <code>[0, 255]</code> range.</p> <p>Returns:</p> Type Description <code>bytes</code> <p>The encoded data.</p> Source code in <code>src/xor_cipher/python.py</code> <pre><code>def xor(data: bytes, key: int) -&gt; bytes:\n    \"\"\"Applies XOR operation (`byte ^ key`) for each `byte` in `data`.\n\n    This function is its own inverse, meaning\n\n    ```python\n    xor(xor(data, key), key) == data\n    ```\n\n    for any `data` and `key`.\n\n    Arguments:\n        data: The data to encode.\n        key: The key to use for encoding. Must be in range `[0, 255]`.\n\n    Raises:\n        ValueError: If the `key` is not in `[0, 255]` range.\n\n    Returns:\n        The encoded data.\n    \"\"\"\n    key = expect_byte(key)\n\n    if not key:\n        return data\n\n    return bytes(byte ^ key for byte in data)\n</code></pre>"},{"location":"reference/#xor_cipher.python.cyclic_xor","title":"<code>cyclic_xor(data: bytes, key: bytes) -&gt; bytes</code>","text":"<p>Applies XOR operation (<code>byte ^ key_byte</code>) for each <code>byte</code> in <code>data</code> and <code>key_byte</code> in <code>key</code>, which is cycled to fit the length of the <code>data</code>.</p> <p>This function is its own inverse, meaning</p> <pre><code>cyclic_xor(cyclic_xor(data, key), key) == data\n</code></pre> <p>for any <code>data</code> and <code>key</code>.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>bytes</code> <p>The data to encode.</p> required <code>key</code> <code>bytes</code> <p>The key to use for encoding.</p> required <p>Returns:</p> Type Description <code>bytes</code> <p>The encoded data.</p> Source code in <code>src/xor_cipher/python.py</code> <pre><code>def cyclic_xor(data: bytes, key: bytes) -&gt; bytes:\n    \"\"\"Applies XOR operation (`byte ^ key_byte`) for each `byte` in `data`\n    and `key_byte` in `key`, which is cycled to fit the length of the `data`.\n\n    This function is its own inverse, meaning\n\n    ```python\n    cyclic_xor(cyclic_xor(data, key), key) == data\n    ```\n\n    for any `data` and `key`.\n\n    Arguments:\n        data: The data to encode.\n        key: The key to use for encoding.\n\n    Returns:\n        The encoded data.\n    \"\"\"\n    if not key:\n        return data\n\n    return bytes(byte ^ key_byte for byte, key_byte in zip(data, cycle(key)))\n</code></pre>"},{"location":"reference/#xor_cipher.python.xor_in_place","title":"<code>xor_in_place(data: bytearray, key: int) -&gt; None</code>","text":"<p>Similar to <code>xor</code>, except it operates in-place.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>bytearray</code> <p>The data to encode.</p> required <code>key</code> <code>int</code> <p>The key to use for encoding. Must be in range <code>[0, 255]</code>.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the <code>key</code> is not in <code>[0, 255]</code> range.</p> Source code in <code>src/xor_cipher/python.py</code> <pre><code>def xor_in_place(data: bytearray, key: int) -&gt; None:\n    \"\"\"Similar to [`xor`][xor_cipher.python.xor], except it operates *in-place*.\n\n    Arguments:\n        data: The data to encode.\n        key: The key to use for encoding. Must be in range `[0, 255]`.\n\n    Raises:\n        ValueError: If the `key` is not in `[0, 255]` range.\n    \"\"\"\n    key = expect_byte(key)\n\n    if not key:\n        return\n\n    length = len(data)\n\n    for index in range(length):\n        data[index] ^= key\n</code></pre>"},{"location":"reference/#xor_cipher.python.cyclic_xor_in_place","title":"<code>cyclic_xor_in_place(data: bytearray, key: bytes) -&gt; None</code>","text":"<p>Similar to <code>cyclic_xor</code>, except it operates in-place.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>bytearray</code> <p>The data to encode.</p> required <code>key</code> <code>bytes</code> <p>The key to use for encoding.</p> required Source code in <code>src/xor_cipher/python.py</code> <pre><code>def cyclic_xor_in_place(data: bytearray, key: bytes) -&gt; None:\n    \"\"\"Similar to [`cyclic_xor`][xor_cipher.python.cyclic_xor], except it operates *in-place*.\n\n    Arguments:\n        data: The data to encode.\n        key: The key to use for encoding.\n    \"\"\"\n    if not key:\n        return\n\n    key_length = len(key)\n\n    length = len(data)\n\n    for index in range(length):\n        data[index] ^= key[index % key_length]\n</code></pre>"},{"location":"reference/#xor_cipher.bytes.MIN_BYTE","title":"<code>MIN_BYTE: Literal[0] = 0</code>  <code>module-attribute</code>","text":"<p>The minimum byte value.</p>"},{"location":"reference/#xor_cipher.bytes.MAX_BYTE","title":"<code>MAX_BYTE: Literal[255] = 255</code>  <code>module-attribute</code>","text":"<p>The maximum byte value.</p>"},{"location":"reference/#xor_cipher.bytes.expect_byte","title":"<code>expect_byte(value: int) -&gt; int</code>","text":"<p>Ensures the <code>int</code> value provided is in <code>[0, 255]</code> range.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>int</code> <p>The value to check.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the given value is outside the expected range.</p> Source code in <code>src/xor_cipher/bytes.py</code> <pre><code>def expect_byte(value: int) -&gt; int:\n    \"\"\"Ensures the [`int`][int] value provided is in `[0, 255]` range.\n\n    Arguments:\n        value: The value to check.\n\n    Raises:\n        ValueError: If the given value is outside the expected range.\n    \"\"\"\n    if is_not_byte(value):\n        raise ValueError(EXPECTED_BYTE)\n\n    return value\n</code></pre>"},{"location":"security/","title":"Security Policy","text":""},{"location":"security/#reporting","title":"Reporting","text":"<p>Thank you for taking the time to responsibly disclose any problems you find.</p> <p>Do not file public issues as they are open for everyone to see!</p> <p>All security vulnerabilities in <code>xor-cipher</code> should be reported by email to security@nekit.dev. Your report will be acknowledged within 24 hours, and you will receive a more detailed response within 48 hours indicating the next steps in handling your report.</p> <p>You can encrypt your report using our public key: <code>6AF9DDF87B37BBE6E83F5DF2B8F5B86F98F12F5E</code>. This key is also available on MIT's Key Server and reproduced below.</p> <p>After the initial reply to your report, the core team will try to keep you informed of the progress being made towards a fix and official announcement. These updates will be sent at least every five days. In reality, this is more likely to be every 24-48 hours.</p>"},{"location":"security/#disclosure-policy","title":"Disclosure Policy","text":"<p><code>xor-cipher</code> has a 5-step disclosure process:</p> <ol> <li> <p>The security report is received and is assigned a primary handler.    This person will coordinate the fix and release process.</p> </li> <li> <p>The problem is confirmed and a list of all affected versions is determined.</p> </li> <li> <p>Code is audited to find any potential similar problems.</p> </li> <li> <p>Fixes are prepared for all releases which are still under maintenance.    These fixes are not committed to the public repository but rather    held locally pending the announcement.</p> </li> <li> <p>On the embargo date, the changes are pushed to the public repository    and new builds are deployed.</p> </li> </ol> <p>This process can take some time, especially when coordination is required with maintainers of other projects. Every effort will be made to handle the issue in as timely a manner as possible, however it is important that we follow the release process above to ensure that the disclosure is handled in a consistent manner.</p>"},{"location":"security/#security-key","title":"Security Key","text":"<pre><code>-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n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\npbmAGLbBB2TBok4=\n=Ir8m\n-----END PGP PUBLIC KEY BLOCK-----\n</code></pre>"},{"location":"security/#attribution","title":"Attribution","text":"<p>This Security Policy is adapted from Rust's Security Policy.</p>"}]}